def solution(n, edges):
    #톱니바퀴를 형상화한 문제
    #순환만 있는 경우

    #공이 쏙 들어가는 2단계 굴(양말)이 있는 경우


    #양말이 없는 경우
    #공을 채울 1단계 구멍 개수 + (써클에 들어가는 꼭지점 개수) + 1개 한 게 n보다 작으면 이길 수

    #(써클에 들어가는 꼭지점 개수)
    #제일 작은 써클(리본 포함? 리본 없음)을 찾고 그 꼭지점들을 기록

      

      #탐색
      #써클이면 circle_vertexes_list에 추가
    
      #circle_vertexes_list에서 가장 점 개수가 작은 써클의 점 개수
    
    